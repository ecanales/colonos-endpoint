//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Colonos.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class cnnDatos : DbContext
    {
        public cnnDatos()
            : base("name=cnnDatos")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ITM1> ITM1 { get; set; }
        public virtual DbSet<ITM2> ITM2 { get; set; }
        public virtual DbSet<ITM3> ITM3 { get; set; }
        public virtual DbSet<ITM4> ITM4 { get; set; }
        public virtual DbSet<ITM5> ITM5 { get; set; }
        public virtual DbSet<ITM6> ITM6 { get; set; }
        public virtual DbSet<ITM7> ITM7 { get; set; }
        public virtual DbSet<ITM8> ITM8 { get; set; }
        public virtual DbSet<OBOD> OBOD { get; set; }
        public virtual DbSet<OVEN> OVEN { get; set; }
        public virtual DbSet<SCP3> SCP3 { get; set; }
        public virtual DbSet<SCP4> SCP4 { get; set; }
        public virtual DbSet<SCP5> SCP5 { get; set; }
        public virtual DbSet<SCP6> SCP6 { get; set; }
        public virtual DbSet<SCP7> SCP7 { get; set; }
        public virtual DbSet<OREG> OREG { get; set; }
        public virtual DbSet<SCP8> SCP8 { get; set; }
        public virtual DbSet<SCP9> SCP9 { get; set; }
        public virtual DbSet<OSCP> OSCP { get; set; }
        public virtual DbSet<SCP1> SCP1 { get; set; }
        public virtual DbSet<SCP2> SCP2 { get; set; }
        public virtual DbSet<ITR1> ITR1 { get; set; }
        public virtual DbSet<OITR> OITR { get; set; }
        public virtual DbSet<OBAN> OBAN { get; set; }
        public virtual DbSet<OLPC> OLPC { get; set; }
        public virtual DbSet<OCFG_VTA> OCFG_VTA { get; set; }
        public virtual DbSet<ITM10> ITM10 { get; set; }
        public virtual DbSet<ITM9> ITM9 { get; set; }
        public virtual DbSet<OITB> OITB { get; set; }
        public virtual DbSet<BDA1> BDA1 { get; set; }
        public virtual DbSet<OBDA> OBDA { get; set; }
        public virtual DbSet<PKG1> PKG1 { get; set; }
        public virtual DbSet<OPKG> OPKG { get; set; }
        public virtual DbSet<OPER> OPER { get; set; }
        public virtual DbSet<PKG2> PKG2 { get; set; }
        public virtual DbSet<PKG3> PKG3 { get; set; }
        public virtual DbSet<OITM> OITM { get; set; }
        public virtual DbSet<FAC1> FAC1 { get; set; }
        public virtual DbSet<OPDC> OPDC { get; set; }
        public virtual DbSet<PDC1> PDC1 { get; set; }
        public virtual DbSet<OFAC> OFAC { get; set; }
        public virtual DbSet<OCIU> OCIU { get; set; }
        public virtual DbSet<OCOM> OCOM { get; set; }
        public virtual DbSet<OZON> OZON { get; set; }
        public virtual DbSet<ZON1> ZON1 { get; set; }
        public virtual DbSet<LOG1> LOG1 { get; set; }
        public virtual DbSet<ORUT> ORUT { get; set; }
        public virtual DbSet<OLOG> OLOG { get; set; }
        public virtual DbSet<OUSR> OUSR { get; set; }
        public virtual DbSet<OTRX> OTRX { get; set; }
        public virtual DbSet<OSMP> OSMP { get; set; }
        public virtual DbSet<SMP1> SMP1 { get; set; }
        public virtual DbSet<TRX1> TRX1 { get; set; }
        public virtual DbSet<SCP10> SCP10 { get; set; }
        public virtual DbSet<SCP11> SCP11 { get; set; }
        public virtual DbSet<SCP11_tmp> SCP11_tmp { get; set; }
        public virtual DbSet<SCP12> SCP12 { get; set; }
        public virtual DbSet<OITB_BASE> OITB_BASE { get; set; }
        public virtual DbSet<GRP1> GRP1 { get; set; }
        public virtual DbSet<MNU1> MNU1 { get; set; }
        public virtual DbSet<OGRP> OGRP { get; set; }
        public virtual DbSet<OMNU> OMNU { get; set; }
        public virtual DbSet<SCP13> SCP13 { get; set; }
        public virtual DbSet<LPC1> LPC1 { get; set; }
        public virtual DbSet<ClienteDF> ClienteDF { get; set; }
        public virtual DbSet<OREN> OREN { get; set; }
        public virtual DbSet<REN2> REN2 { get; set; }
        public virtual DbSet<OPED> OPED { get; set; }
        public virtual DbSet<PED1> PED1 { get; set; }
        public virtual DbSet<OCUS> OCUS { get; set; }
        public virtual DbSet<DEV1> DEV1 { get; set; }
        public virtual DbSet<ODEV> ODEV { get; set; }
        public virtual DbSet<DEV2> DEV2 { get; set; }
    
        public virtual ObjectResult<spSocio_Busqueda_Result> spSocio_Busqueda(string palabras, string tipo, string usuario)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSocio_Busqueda_Result>("spSocio_Busqueda", palabrasParameter, tipoParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<spPedido_Busqueda_Result> spPedido_Busqueda(string palabras, string vendedorcode, string usuario)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var vendedorcodeParameter = vendedorcode != null ?
                new ObjectParameter("vendedorcode", vendedorcode) :
                new ObjectParameter("vendedorcode", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPedido_Busqueda_Result>("spPedido_Busqueda", palabrasParameter, vendedorcodeParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<spReceta_Busqueda_Result> spReceta_Busqueda(string palabras, string sku)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("Sku", sku) :
                new ObjectParameter("Sku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReceta_Busqueda_Result>("spReceta_Busqueda", palabrasParameter, skuParameter);
        }
    
        public virtual ObjectResult<spTemp_TopCliente_Result> spTemp_TopCliente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTemp_TopCliente_Result>("spTemp_TopCliente");
        }
    
        public virtual ObjectResult<spTemp_TopRubro_Result> spTemp_TopRubro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTemp_TopRubro_Result>("spTemp_TopRubro");
        }
    
        public virtual ObjectResult<spUltimasVentasCliente_Result> spUltimasVentasCliente(string sociocode)
        {
            var sociocodeParameter = sociocode != null ?
                new ObjectParameter("sociocode", sociocode) :
                new ObjectParameter("sociocode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUltimasVentasCliente_Result>("spUltimasVentasCliente", sociocodeParameter);
        }
    
        public virtual ObjectResult<spTopCliente_Result> spTopCliente(string sociocode)
        {
            var sociocodeParameter = sociocode != null ?
                new ObjectParameter("sociocode", sociocode) :
                new ObjectParameter("sociocode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTopCliente_Result>("spTopCliente", sociocodeParameter);
        }
    
        public virtual ObjectResult<spTopRubro_Result> spTopRubro(string sociocode)
        {
            var sociocodeParameter = sociocode != null ?
                new ObjectParameter("sociocode", sociocode) :
                new ObjectParameter("sociocode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTopRubro_Result>("spTopRubro", sociocodeParameter);
        }
    
        public virtual ObjectResult<spUltimosPreciosClienteFamilia_Result> spUltimosPreciosClienteFamilia(string sociocode, Nullable<int> familiacode)
        {
            var sociocodeParameter = sociocode != null ?
                new ObjectParameter("sociocode", sociocode) :
                new ObjectParameter("sociocode", typeof(string));
    
            var familiacodeParameter = familiacode.HasValue ?
                new ObjectParameter("familiacode", familiacode) :
                new ObjectParameter("familiacode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUltimosPreciosClienteFamilia_Result>("spUltimosPreciosClienteFamilia", sociocodeParameter, familiacodeParameter);
        }
    
        public virtual ObjectResult<spPicking_Busqueda_Result> spPicking_Busqueda(string palabras, string bodegacode)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var bodegacodeParameter = bodegacode != null ?
                new ObjectParameter("bodegacode", bodegacode) :
                new ObjectParameter("bodegacode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPicking_Busqueda_Result>("spPicking_Busqueda", palabrasParameter, bodegacodeParameter);
        }
    
        public virtual ObjectResult<spPicking_Listar_Result> spPicking_Listar(string bodegacode, string estado)
        {
            var bodegacodeParameter = bodegacode != null ?
                new ObjectParameter("bodegacode", bodegacode) :
                new ObjectParameter("bodegacode", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPicking_Listar_Result>("spPicking_Listar", bodegacodeParameter, estadoParameter);
        }
    
        public virtual ObjectResult<spFactura_Busqueda_Result> spFactura_Busqueda(string palabras, string vendedorcode)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var vendedorcodeParameter = vendedorcode != null ?
                new ObjectParameter("vendedorcode", vendedorcode) :
                new ObjectParameter("vendedorcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFactura_Busqueda_Result>("spFactura_Busqueda", palabrasParameter, vendedorcodeParameter);
        }
    
        public virtual ObjectResult<spProduccion_Busqueda_Result> spProduccion_Busqueda(string palabras, string vendedorcode)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var vendedorcodeParameter = vendedorcode != null ?
                new ObjectParameter("vendedorcode", vendedorcode) :
                new ObjectParameter("vendedorcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProduccion_Busqueda_Result>("spProduccion_Busqueda", palabrasParameter, vendedorcodeParameter);
        }
    
        public virtual ObjectResult<spOPED_Listar_Result> spOPED_Listar(string vendedor, string estadooperativo, string estado, Nullable<int> pendiente, string fechaini, string fechafin, string bodegacode)
        {
            var vendedorParameter = vendedor != null ?
                new ObjectParameter("vendedor", vendedor) :
                new ObjectParameter("vendedor", typeof(string));
    
            var estadooperativoParameter = estadooperativo != null ?
                new ObjectParameter("estadooperativo", estadooperativo) :
                new ObjectParameter("estadooperativo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var pendienteParameter = pendiente.HasValue ?
                new ObjectParameter("pendiente", pendiente) :
                new ObjectParameter("pendiente", typeof(int));
    
            var fechainiParameter = fechaini != null ?
                new ObjectParameter("fechaini", fechaini) :
                new ObjectParameter("fechaini", typeof(string));
    
            var fechafinParameter = fechafin != null ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(string));
    
            var bodegacodeParameter = bodegacode != null ?
                new ObjectParameter("bodegacode", bodegacode) :
                new ObjectParameter("bodegacode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOPED_Listar_Result>("spOPED_Listar", vendedorParameter, estadooperativoParameter, estadoParameter, pendienteParameter, fechainiParameter, fechafinParameter, bodegacodeParameter);
        }
    
        public virtual ObjectResult<spOPKG_Listar_Result> spOPKG_Listar(string bodegacode, string estado)
        {
            var bodegacodeParameter = bodegacode != null ?
                new ObjectParameter("bodegacode", bodegacode) :
                new ObjectParameter("bodegacode", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOPKG_Listar_Result>("spOPKG_Listar", bodegacodeParameter, estadoParameter);
        }
    
        public virtual ObjectResult<spOFAC_Listar_Result> spOFAC_Listar(string estado, string fechaini, string fechafin)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var fechainiParameter = fechaini != null ?
                new ObjectParameter("fechaini", fechaini) :
                new ObjectParameter("fechaini", typeof(string));
    
            var fechafinParameter = fechafin != null ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOFAC_Listar_Result>("spOFAC_Listar", estadoParameter, fechainiParameter, fechafinParameter);
        }
    
        public virtual ObjectResult<spLogistica_Busqueda_Result> spLogistica_Busqueda(string palabras, string vendedorcode)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var vendedorcodeParameter = vendedorcode != null ?
                new ObjectParameter("vendedorcode", vendedorcode) :
                new ObjectParameter("vendedorcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLogistica_Busqueda_Result>("spLogistica_Busqueda", palabrasParameter, vendedorcodeParameter);
        }
    
        public virtual ObjectResult<spOLOG_Listar_Result> spOLOG_Listar(string estado, string fechaini, string fechafin, string scenario_token)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var fechainiParameter = fechaini != null ?
                new ObjectParameter("fechaini", fechaini) :
                new ObjectParameter("fechaini", typeof(string));
    
            var fechafinParameter = fechafin != null ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(string));
    
            var scenario_tokenParameter = scenario_token != null ?
                new ObjectParameter("scenario_token", scenario_token) :
                new ObjectParameter("scenario_token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOLOG_Listar_Result>("spOLOG_Listar", estadoParameter, fechainiParameter, fechafinParameter, scenario_tokenParameter);
        }
    
        public virtual ObjectResult<spProducto_Busqueda_Maestro_Result> spProducto_Busqueda_Maestro(string palabras, string sku)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("Sku", sku) :
                new ObjectParameter("Sku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProducto_Busqueda_Maestro_Result>("spProducto_Busqueda_Maestro", palabrasParameter, skuParameter);
        }
    
        public virtual ObjectResult<spOPDC_Listar_Result> spOPDC_Listar(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOPDC_Listar_Result>("spOPDC_Listar", estadoParameter);
        }
    
        public virtual ObjectResult<spPicking_Produccion_Result> spPicking_Produccion(Nullable<int> docentry)
        {
            var docentryParameter = docentry.HasValue ?
                new ObjectParameter("docentry", docentry) :
                new ObjectParameter("docentry", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPicking_Produccion_Result>("spPicking_Produccion", docentryParameter);
        }
    
        public virtual ObjectResult<spPicking_Produccion_Detalle_Result> spPicking_Produccion_Detalle(Nullable<int> docentry)
        {
            var docentryParameter = docentry.HasValue ?
                new ObjectParameter("docentry", docentry) :
                new ObjectParameter("docentry", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPicking_Produccion_Detalle_Result>("spPicking_Produccion_Detalle", docentryParameter);
        }
    
        public virtual ObjectResult<spPicking_Toledo_Result> spPicking_Toledo(Nullable<int> docentry)
        {
            var docentryParameter = docentry.HasValue ?
                new ObjectParameter("docentry", docentry) :
                new ObjectParameter("docentry", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPicking_Toledo_Result>("spPicking_Toledo", docentryParameter);
        }
    
        public virtual ObjectResult<spPicking_Toledo_Detalle_Result> spPicking_Toledo_Detalle(Nullable<int> docentry)
        {
            var docentryParameter = docentry.HasValue ?
                new ObjectParameter("docentry", docentry) :
                new ObjectParameter("docentry", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPicking_Toledo_Detalle_Result>("spPicking_Toledo_Detalle", docentryParameter);
        }
    
        public virtual ObjectResult<spOSMP_Listar_Result> spOSMP_Listar(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOSMP_Listar_Result>("spOSMP_Listar", estadoParameter);
        }
    
        public virtual ObjectResult<spSolicitudMP_Busqueda_Result> spSolicitudMP_Busqueda(string palabras, string vendedorcode)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var vendedorcodeParameter = vendedorcode != null ?
                new ObjectParameter("vendedorcode", vendedorcode) :
                new ObjectParameter("vendedorcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSolicitudMP_Busqueda_Result>("spSolicitudMP_Busqueda", palabrasParameter, vendedorcodeParameter);
        }
    
        public virtual ObjectResult<spProducto_Busqueda_Result> spProducto_Busqueda(string palabras, string sku, string bodegacode)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            var skuParameter = sku != null ?
                new ObjectParameter("Sku", sku) :
                new ObjectParameter("Sku", typeof(string));
    
            var bodegacodeParameter = bodegacode != null ?
                new ObjectParameter("bodegacode", bodegacode) :
                new ObjectParameter("bodegacode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProducto_Busqueda_Result>("spProducto_Busqueda", palabrasParameter, skuParameter, bodegacodeParameter);
        }
    
        public virtual ObjectResult<spSocio_Ventas12meses_Result> spSocio_Ventas12meses(string sociocode)
        {
            var sociocodeParameter = sociocode != null ?
                new ObjectParameter("sociocode", sociocode) :
                new ObjectParameter("sociocode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSocio_Ventas12meses_Result>("spSocio_Ventas12meses", sociocodeParameter);
        }
    
        public virtual ObjectResult<spOPED_Historial_Result> spOPED_Historial(Nullable<int> docentry, Nullable<int> doctipo)
        {
            var docentryParameter = docentry.HasValue ?
                new ObjectParameter("docentry", docentry) :
                new ObjectParameter("docentry", typeof(int));
    
            var doctipoParameter = doctipo.HasValue ?
                new ObjectParameter("doctipo", doctipo) :
                new ObjectParameter("doctipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOPED_Historial_Result>("spOPED_Historial", docentryParameter, doctipoParameter);
        }
    
        public virtual ObjectResult<spProducto_Correlativo_Result> spProducto_Correlativo(Nullable<int> famliacode)
        {
            var famliacodeParameter = famliacode.HasValue ?
                new ObjectParameter("famliacode", famliacode) :
                new ObjectParameter("famliacode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProducto_Correlativo_Result>("spProducto_Correlativo", famliacodeParameter);
        }
    
        public virtual ObjectResult<spReceta_Stock_Result> spReceta_Stock(string prodcod, string bodegacode)
        {
            var prodcodParameter = prodcod != null ?
                new ObjectParameter("prodcod", prodcod) :
                new ObjectParameter("prodcod", typeof(string));
    
            var bodegacodeParameter = bodegacode != null ?
                new ObjectParameter("bodegacode", bodegacode) :
                new ObjectParameter("bodegacode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReceta_Stock_Result>("spReceta_Stock", prodcodParameter, bodegacodeParameter);
        }
    
        public virtual ObjectResult<spProducto_ConsultaStock_Result> spProducto_ConsultaStock(string palabras)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProducto_ConsultaStock_Result>("spProducto_ConsultaStock", palabrasParameter);
        }
    
        public virtual ObjectResult<spInfo_ControlPrecios_Result> spInfo_ControlPrecios(Nullable<int> familiacode)
        {
            var familiacodeParameter = familiacode.HasValue ?
                new ObjectParameter("familiacode", familiacode) :
                new ObjectParameter("familiacode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInfo_ControlPrecios_Result>("spInfo_ControlPrecios", familiacodeParameter);
        }
    
        public virtual ObjectResult<spInfo_SeguimientoOperacion_Result> spInfo_SeguimientoOperacion(string usuario, string fechaini, string fechafin, string cliente)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var fechainiParameter = fechaini != null ?
                new ObjectParameter("fechaini", fechaini) :
                new ObjectParameter("fechaini", typeof(string));
    
            var fechafinParameter = fechafin != null ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(string));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("cliente", cliente) :
                new ObjectParameter("cliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInfo_SeguimientoOperacion_Result>("spInfo_SeguimientoOperacion", usuarioParameter, fechainiParameter, fechafinParameter, clienteParameter);
        }
    
        public virtual ObjectResult<spLogin_Result> spLogin(string usuario, string password)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLogin_Result>("spLogin", usuarioParameter, passwordParameter);
        }
    
        public virtual ObjectResult<spSystem_ConfigMenu_Result> spSystem_ConfigMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSystem_ConfigMenu_Result>("spSystem_ConfigMenu");
        }
    
        public virtual ObjectResult<spSystem_UsAccesos_Result> spSystem_UsAccesos(string grupo)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSystem_UsAccesos_Result>("spSystem_UsAccesos", grupoParameter);
        }
    
        public virtual ObjectResult<spSystem_GruposAddAcceso_Result> spSystem_GruposAddAcceso(Nullable<short> fK_MenuMain, Nullable<short> fK_MenuSubA, Nullable<short> fK_MenuSubB, string fK_Grupo, Nullable<bool> acceso)
        {
            var fK_MenuMainParameter = fK_MenuMain.HasValue ?
                new ObjectParameter("FK_MenuMain", fK_MenuMain) :
                new ObjectParameter("FK_MenuMain", typeof(short));
    
            var fK_MenuSubAParameter = fK_MenuSubA.HasValue ?
                new ObjectParameter("FK_MenuSubA", fK_MenuSubA) :
                new ObjectParameter("FK_MenuSubA", typeof(short));
    
            var fK_MenuSubBParameter = fK_MenuSubB.HasValue ?
                new ObjectParameter("FK_MenuSubB", fK_MenuSubB) :
                new ObjectParameter("FK_MenuSubB", typeof(short));
    
            var fK_GrupoParameter = fK_Grupo != null ?
                new ObjectParameter("FK_Grupo", fK_Grupo) :
                new ObjectParameter("FK_Grupo", typeof(string));
    
            var accesoParameter = acceso.HasValue ?
                new ObjectParameter("Acceso", acceso) :
                new ObjectParameter("Acceso", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSystem_GruposAddAcceso_Result>("spSystem_GruposAddAcceso", fK_MenuMainParameter, fK_MenuSubAParameter, fK_MenuSubBParameter, fK_GrupoParameter, accesoParameter);
        }
    
        public virtual ObjectResult<spSystem_Usuario_Result> spSystem_Usuario(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSystem_Usuario_Result>("spSystem_Usuario", idUsuarioParameter);
        }
    
        public virtual ObjectResult<spFamilia_Busqueda_Result> spFamilia_Busqueda(string palabras)
        {
            var palabrasParameter = palabras != null ?
                new ObjectParameter("Palabras", palabras) :
                new ObjectParameter("Palabras", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFamilia_Busqueda_Result>("spFamilia_Busqueda", palabrasParameter);
        }
    
        public virtual ObjectResult<spOITM_Listar_Result> spOITM_Listar(string activo)
        {
            var activoParameter = activo != null ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOITM_Listar_Result>("spOITM_Listar", activoParameter);
        }
    
        public virtual ObjectResult<spOPED_Ventas_Result> spOPED_Ventas(string socioCode, string docEstado)
        {
            var socioCodeParameter = socioCode != null ?
                new ObjectParameter("SocioCode", socioCode) :
                new ObjectParameter("SocioCode", typeof(string));
    
            var docEstadoParameter = docEstado != null ?
                new ObjectParameter("DocEstado", docEstado) :
                new ObjectParameter("DocEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOPED_Ventas_Result>("spOPED_Ventas", socioCodeParameter, docEstadoParameter);
        }
    
        public virtual ObjectResult<spInfo_PedidosDiario_Result> spInfo_PedidosDiario(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInfo_PedidosDiario_Result>("spInfo_PedidosDiario", fechaParameter);
        }
    
        public virtual ObjectResult<spInfo_PedidosDiario_AreaPorHora_Result> spInfo_PedidosDiario_AreaPorHora(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInfo_PedidosDiario_AreaPorHora_Result>("spInfo_PedidosDiario_AreaPorHora", fechaParameter);
        }
    
        public virtual ObjectResult<spInfo_PedidosDiario_Entregas_Result> spInfo_PedidosDiario_Entregas(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInfo_PedidosDiario_Entregas_Result>("spInfo_PedidosDiario_Entregas", fechaParameter);
        }
    
        public virtual ObjectResult<spInfo_PedidosDiario_TopClientes_Result> spInfo_PedidosDiario_TopClientes(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInfo_PedidosDiario_TopClientes_Result>("spInfo_PedidosDiario_TopClientes", fechaParameter);
        }
    
        public virtual ObjectResult<spInfo_PedidosDiario_Vendedor_Result> spInfo_PedidosDiario_Vendedor(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInfo_PedidosDiario_Vendedor_Result>("spInfo_PedidosDiario_Vendedor", fechaParameter);
        }
    
        public virtual ObjectResult<spInfo_PedidosDiario_VendedorPorHora_Result> spInfo_PedidosDiario_VendedorPorHora(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInfo_PedidosDiario_VendedorPorHora_Result>("spInfo_PedidosDiario_VendedorPorHora", fechaParameter);
        }
    
        public virtual ObjectResult<spORUT_Listar_Result> spORUT_Listar(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spORUT_Listar_Result>("spORUT_Listar", estadoParameter);
        }
    }
}
